<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fcwebdev.com</groupId>
  <artifactId>tapblockchain</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>tapblockchain</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <jacoco.data.file>${project.build.directory}/coveragereports/jacoco.exec</jacoco.data.file>
 <jacoco.report.path>${project.reporting.outputDirectory}/jacocout</jacoco.report.path>
    <sonar.jacoco.reportPaths>${jacoco.data.file}</sonar.jacoco.reportPaths>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    
      <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-all</artifactId>
    <version>1.9.5</version>
    <scope>test</scope>
</dependency>

  </dependencies>
   <profiles>
 <profile>
 <id>jacoco</id>
 <activation>
 <activeByDefault>false</activeByDefault>
 </activation>
 <build>
 <plugins>
 <plugin>
 <groupId>org.jacoco</groupId>
 <artifactId>jacoco-maven-plugin</artifactId>
 <version>0.7.7.201606060606</version>
 <executions>
 <!-- Prepares the property pointing to the JaCoCo runtime agent
 which is passed as VM argument when Maven the Surefire plugin is
executed. -->
 <execution>
 <id>pre-unit-test</id>
 <goals>
 <goal>prepare-agent</goal>
 </goals>
 <configuration>
 <!-- Sets the path to the file which contains the execution
data. -->
 <destFile>${jacoco.data.file}</destFile>
 <!-- Sets the name of the property containing the settings for
JaCoCo runtime agent. -->
 <propertyName>surefireArgLine</propertyName>
 </configuration>
 </execution>
 <!-- Ensures that the code coverage report for unit tests is
created after unit tests have been run. -->
 <execution>
 <id>post-unit-test</id>
 <phase>test</phase>
 <goals>
 <goal>report</goal>
 </goals>
 <configuration>
 <!-- Sets the path to the file which contains the execution
data. -->
 <dataFile>${jacoco.data.file}</dataFile>
 <!-- Sets the output directory for the code coverage report.
-->
 <outputDirectory>${jacoco.report.path}</outputDirectory>
 </configuration>
 </execution>
 </executions>
 </plugin>
 <plugin>
 <groupId>org.apache.maven.plugins</groupId>
 <artifactId>maven-surefire-plugin</artifactId>
 <version>2.19.1</version>
 <configuration>
 <!-- Sets the VM argument line used when unit tests are run. -->
 <argLine>${surefireArgLine}</argLine>
 </configuration>
 </plugin>
 </plugins>
 </build>
 </profile>
 </profiles>
  <build>
  
  <plugins>
	  <plugin>
		  <groupId>org.jacoco</groupId>
		  <artifactId>jacoco-maven-plugin</artifactId>
		  <version>0.8.0</version><executions>
        <!--
            Prepares the property pointing to the JaCoCo runtime agent which
            is passed as VM argument when Maven the Surefire plugin is executed.
        -->
        <execution>
            <id>pre-unit-test</id>
            <goals>
                <goal>prepare-agent</goal>
            </goals>
            <configuration>
                <!-- Sets the path to the file which contains the execution data. -->
                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                <!--
                    Sets the name of the property containing the settings
                    for JaCoCo runtime agent.
                -->
                <propertyName>surefireArgLine</propertyName>
            </configuration>
        </execution>
        <!--
            Ensures that the code coverage report for unit tests is created after
            unit tests have been run.
        -->
        <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
                <goal>report</goal>
            </goals>
            <configuration>
                <!-- Sets the path to the file which contains the execution data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
        </execution>
    </executions>
	</plugin>
	<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.15</version>
    <configuration>
        <!-- Sets the VM argument line used when unit tests are run. -->
        <argLine>${surefireArgLine}</argLine>
        <!-- Skips unit tests if the value of skip.unit.tests property is true -->
        <skipTests>${skip.unit.tests}</skipTests>
        <!-- Excludes integration tests when unit tests are run. -->
        <excludes>
            <exclude>**/IT*.java</exclude>
        </excludes>
    </configuration>
</plugin>
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-failsafe-plugin</artifactId>
    <version>2.15</version>
    <executions>
        <!--
            Ensures that both integration-test and verify goals of the Failsafe Maven
            plugin are executed.
        -->
        <execution>
            <id>integration-tests</id>
            <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
            </goals>
            <configuration>
                <!-- Sets the VM argument line used when integration tests are run. -->
                <argLine>${failsafeArgLine}</argLine>
                <!--
                    Skips integration tests if the value of skip.integration.tests property
                    is true
                -->
                <skipTests>${skip.integration.tests}</skipTests>
            </configuration>
        </execution>
    </executions>
</plugin>
 <plugin>
 <groupId>org.eluder.coveralls</groupId>
 <artifactId>coveralls-maven-plugin</artifactId>
 <version>4.3.0</version>
 <configuration>
 <jacocoReports>
 <jacocoReport>${jacoco.report.path}/jacoco.xml</jacocoReport>
 </jacocoReports>
 </configuration>
 </plugin>
  </plugins>
  </build>
</project>
